/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.97.2
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export enum ErrorInput { AccessDenied = 'AccessDenied', NotEnoughFreeCollateralByImRatio = 'NotEnoughFreeCollateralByImRatio', ZeroPrice = 'ZeroPrice' };
export enum ErrorOutput { AccessDenied = 'AccessDenied', NotEnoughFreeCollateralByImRatio = 'NotEnoughFreeCollateralByImRatio', ZeroPrice = 'ZeroPrice' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AccountBalanceInput = { taker_position_size: I64Input, taker_open_notional: I64Input, last_tw_premium_growth_global: I64Input };
export type AccountBalanceOutput = { taker_position_size: I64Output, taker_open_notional: I64Output, last_tw_premium_growth_global: I64Output };
export type AccountBalanceChangeEventInput = { trader: IdentityInput, base_token: AssetIdInput, account_balance: AccountBalanceInput, timestamp: BigNumberish };
export type AccountBalanceChangeEventOutput = { trader: IdentityOutput, base_token: AssetIdOutput, account_balance: AccountBalanceOutput, timestamp: BN };
export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type FundingInput = { last_funding_growth_global: I64Input, last_settled_timestamp: BigNumberish };
export type FundingOutput = { last_funding_growth_global: I64Output, last_settled_timestamp: BN };
export type I64Input = { underlying: BigNumberish };
export type I64Output = { underlying: BN };
export type OwedRealizedPnlChangeEventInput = { trader: IdentityInput, owed_realized_pnl: I64Input };
export type OwedRealizedPnlChangeEventOutput = { trader: IdentityOutput, owed_realized_pnl: I64Output };

export type AccountBalanceConfigurables = Partial<{
  FULLY_CLOSED_RATIO: BigNumberish;
  SETTLEMENT_TOKEN: AssetIdInput;
  DUST: BigNumberish;
  VERSION: BigNumberish;
  VAULT: ContractIdInput;
  INSURANCE_FUND: ContractIdInput;
  TREASURY: IdentityInput;
}>;

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "(struct compolabs_sway_libs::signed_integers::i64::I64, struct compolabs_sway_libs::signed_integers::i64::I64)",
      "concreteTypeId": "2dc9f1d874ea07098074d9faab0f3a78ab65b0a242a057f23fa7cc57eeda134e",
      "metadataTypeId": 0
    },
    {
      "type": "(struct compolabs_sway_libs::signed_integers::i64::I64, struct compolabs_sway_libs::signed_integers::i64::I64, struct compolabs_sway_libs::signed_integers::i64::I64, u64)",
      "concreteTypeId": "18e6eeb4dc6c8adc7987e433a20e6f448393f0529643892c0a6196e5052544c9",
      "metadataTypeId": 2
    },
    {
      "type": "(struct std::asset_id::AssetId, struct account_balance_abi::data_structures::AccountBalance)",
      "concreteTypeId": "85124d4d4054de2e2cfb0d52db5dcf06cb063ee1b23de974ccd69adc4c843ee5",
      "metadataTypeId": 1
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum account_balance_abi::errors::Error",
      "concreteTypeId": "8763a76d860a0dc464f395e8b6eb87d38360622db2ad34851c7ac8ce1e57df41",
      "metadataTypeId": 4
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 5
    },
    {
      "type": "struct account_balance_abi::data_structures::AccountBalance",
      "concreteTypeId": "679c3b8c7552bd8aa3e04c230be4c0dcb6a3a3a4cc0db1103c7e2da7ab9085ca",
      "metadataTypeId": 8
    },
    {
      "type": "struct account_balance_abi::data_structures::Funding",
      "concreteTypeId": "6ef48c093dad6d00d9213e4d1538cadfa085d033fcaae26e54261c4c478a5746",
      "metadataTypeId": 9
    },
    {
      "type": "struct compolabs_sway_libs::signed_integers::i64::I64",
      "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "metadataTypeId": 10
    },
    {
      "type": "struct events::AccountBalanceChangeEvent",
      "concreteTypeId": "76814460f2b5ce69a0885186c9e4f655a646c682bd0112b276bbf3d6b6c86b6b",
      "metadataTypeId": 11
    },
    {
      "type": "struct events::OwedRealizedPnlChangeEvent",
      "concreteTypeId": "0a687bf2590a0714c134c743325abd1f1cfc20e81839bab254749129a8e1c58c",
      "metadataTypeId": 12
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 14
    },
    {
      "type": "struct std::contract_id::ContractId",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "metadataTypeId": 15
    },
    {
      "type": "struct std::vec::Vec<(struct std::asset_id::AssetId, struct account_balance_abi::data_structures::AccountBalance)>",
      "concreteTypeId": "3956ef73fc22281580d20415cdb2174205b20b76ae2b1a1c5c3d1fee942cf097",
      "metadataTypeId": 17,
      "typeArguments": [
        "85124d4d4054de2e2cfb0d52db5dcf06cb063ee1b23de974ccd69adc4c843ee5"
      ]
    },
    {
      "type": "struct std::vec::Vec<struct std::asset_id::AssetId>",
      "concreteTypeId": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b",
      "metadataTypeId": 17,
      "typeArguments": [
        "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
      ]
    },
    {
      "type": "u32",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 10
        },
        {
          "name": "__tuple_element",
          "typeId": 10
        }
      ]
    },
    {
      "type": "(_, _)",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 14
        },
        {
          "name": "__tuple_element",
          "typeId": 8
        }
      ]
    },
    {
      "type": "(_, _, _, _)",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 10
        },
        {
          "name": "__tuple_element",
          "typeId": 10
        },
        {
          "name": "__tuple_element",
          "typeId": 10
        },
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 3
    },
    {
      "type": "enum account_balance_abi::errors::Error",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "AccessDenied",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "NotEnoughFreeCollateralByImRatio",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ZeroPrice",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "Address",
          "typeId": 13
        },
        {
          "name": "ContractId",
          "typeId": 15
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 6
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 7
    },
    {
      "type": "struct account_balance_abi::data_structures::AccountBalance",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "taker_position_size",
          "typeId": 10
        },
        {
          "name": "taker_open_notional",
          "typeId": 10
        },
        {
          "name": "last_tw_premium_growth_global",
          "typeId": 10
        }
      ]
    },
    {
      "type": "struct account_balance_abi::data_structures::Funding",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "last_funding_growth_global",
          "typeId": 10
        },
        {
          "name": "last_settled_timestamp",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct compolabs_sway_libs::signed_integers::i64::I64",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "underlying",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::AccountBalanceChangeEvent",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "trader",
          "typeId": 5
        },
        {
          "name": "base_token",
          "typeId": 14
        },
        {
          "name": "account_balance",
          "typeId": 8
        },
        {
          "name": "timestamp",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::OwedRealizedPnlChangeEvent",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "trader",
          "typeId": 5
        },
        {
          "name": "owed_realized_pnl",
          "typeId": 10
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "bits",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "bits",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "bits",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 16,
      "components": [
        {
          "name": "ptr",
          "typeId": 7
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        6
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 17,
      "components": [
        {
          "name": "buf",
          "typeId": 16,
          "typeArguments": [
            {
              "name": "",
              "typeId": 6
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        6
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "sell_trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "buy_trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "trade_amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "trade_value",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "seller_fee",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        },
        {
          "name": "buyer_fee",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        },
        {
          "name": "matcher",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "execute_trade_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "amount",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        }
      ],
      "name": "modify_owed_realized_pnl_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "exchanged_position_size",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        },
        {
          "name": "exchanged_position_notional",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        }
      ],
      "name": "modify_position_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "register_base_token_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "settle_all_funding_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "settle_bad_debt_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "settle_funding_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "settle_owed_realized_pnl_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "settle_position_in_closed_market_a",
      "output": "18e6eeb4dc6c8adc7987e433a20e6f448393f0529643892c0a6196e5052544c9",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "insurance_fund_fee_share",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "update_insurance_fund_fee_share_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "max_funding_rate",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "update_max_funding_rate_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "protocol_fee_rate",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "update_protocol_fee_rate_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "last_tw_premium_growth_global",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        }
      ],
      "name": "update_tw_premium_growth_global_a",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_account_balance_a",
      "output": "679c3b8c7552bd8aa3e04c230be4c0dcb6a3a3a4cc0db1103c7e2da7ab9085ca",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_account_collateral_values_a",
      "output": "2dc9f1d874ea07098074d9faab0f3a78ab65b0a242a057f23fa7cc57eeda134e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_all_pending_funding_payment_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_all_trader_positions_a",
      "output": "3956ef73fc22281580d20415cdb2174205b20b76ae2b1a1c5c3d1fee942cf097",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_base_tokens_a",
      "output": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_free_collateral_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_free_collateral_by_token_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_funding_a",
      "output": "6ef48c093dad6d00d9213e4d1538cadfa085d033fcaae26e54261c4c478a5746",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "market_twap",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "index_twap",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "get_funding_delta_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_funding_growth_global_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_funding_rate_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "account_value",
          "concreteTypeId": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce"
        }
      ],
      "name": "get_liquidatable_position_size_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_margin_requirement_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "buffer",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "get_margin_requirement_for_liquidation_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_max_repaid_settlement_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_pending_funding_payment_a",
      "output": "2dc9f1d874ea07098074d9faab0f3a78ab65b0a242a057f23fa7cc57eeda134e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_pnl_a",
      "output": "2dc9f1d874ea07098074d9faab0f3a78ab65b0a242a057f23fa7cc57eeda134e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_protocol_fee_rate_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_settlement_token_balance_and_unrealized_pnl_a",
      "output": "2dc9f1d874ea07098074d9faab0f3a78ab65b0a242a057f23fa7cc57eeda134e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_taker_open_notional_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_taker_position_size_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_total_abs_position_value_a",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "base_token",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_total_position_value_a",
      "output": "c35f504fa0cf6c3c54066e2780bc4033982f9a802842793a014ba0f5c699d8ce",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "is_liquidatable_a",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "749985618763319060",
      "concreteTypeId": "0a687bf2590a0714c134c743325abd1f1cfc20e81839bab254749129a8e1c58c"
    },
    {
      "logId": "8539181551650721385",
      "concreteTypeId": "76814460f2b5ce69a0885186c9e4f655a646c682bd0112b276bbf3d6b6c86b6b"
    },
    {
      "logId": "9755825306656705988",
      "concreteTypeId": "8763a76d860a0dc464f395e8b6eb87d38360622db2ad34851c7ac8ce1e57df41"
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "FULLY_CLOSED_RATIO",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 79904
    },
    {
      "name": "SETTLEMENT_TOKEN",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "offset": 79944
    },
    {
      "name": "DUST",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 79896
    },
    {
      "name": "VERSION",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "offset": 80048
    },
    {
      "name": "VAULT",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "offset": 80016
    },
    {
      "name": "INSURANCE_FUND",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "offset": 79912
    },
    {
      "name": "TREASURY",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "offset": 79976
    }
  ]
};

const storageSlots: StorageSlot[] = [
  {
    "key": "18a6e3f783db76756d024a823ad15e410ede40f87ac07904e852bb6769f52a3e",
    "value": "000000000007a120000000000000000000000000000000000000000000000000"
  },
  {
    "key": "704656fac7207231880e56895bb5cd2e80e27c78158bd2ed9d119fcebdd7ae92",
    "value": "0000000000001388000000000000000000000000000000000000000000000000"
  },
  {
    "key": "f32002bb3e4a2ab05d0b9041b7358fb8fd3c6e0825103390ab860e36fb873bd6",
    "value": "0000000005f5e100000000000000000000000000000000000000000000000000"
  },
  {
    "key": "fb9f40f381fc45e2837a6225f9869ddef999b0fbb7d164251a03d5d925eb9e2e",
    "value": "0000000000030d40000000000000000000000000000000000000000000000000"
  }
];

export class AccountBalanceInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    execute_trade_a: FunctionFragment;
    modify_owed_realized_pnl_a: FunctionFragment;
    modify_position_a: FunctionFragment;
    register_base_token_a: FunctionFragment;
    settle_all_funding_a: FunctionFragment;
    settle_bad_debt_a: FunctionFragment;
    settle_funding_a: FunctionFragment;
    settle_owed_realized_pnl_a: FunctionFragment;
    settle_position_in_closed_market_a: FunctionFragment;
    update_insurance_fund_fee_share_a: FunctionFragment;
    update_max_funding_rate_a: FunctionFragment;
    update_protocol_fee_rate_a: FunctionFragment;
    update_tw_premium_growth_global_a: FunctionFragment;
    get_account_balance_a: FunctionFragment;
    get_account_collateral_values_a: FunctionFragment;
    get_all_pending_funding_payment_a: FunctionFragment;
    get_all_trader_positions_a: FunctionFragment;
    get_base_tokens_a: FunctionFragment;
    get_free_collateral_a: FunctionFragment;
    get_free_collateral_by_token_a: FunctionFragment;
    get_funding_a: FunctionFragment;
    get_funding_delta_a: FunctionFragment;
    get_funding_growth_global_a: FunctionFragment;
    get_funding_rate_a: FunctionFragment;
    get_liquidatable_position_size_a: FunctionFragment;
    get_margin_requirement_a: FunctionFragment;
    get_margin_requirement_for_liquidation_a: FunctionFragment;
    get_max_repaid_settlement_a: FunctionFragment;
    get_pending_funding_payment_a: FunctionFragment;
    get_pnl_a: FunctionFragment;
    get_protocol_fee_rate_a: FunctionFragment;
    get_settlement_token_balance_and_unrealized_pnl_a: FunctionFragment;
    get_taker_open_notional_a: FunctionFragment;
    get_taker_position_size_a: FunctionFragment;
    get_total_abs_position_value_a: FunctionFragment;
    get_total_position_value_a: FunctionFragment;
    is_liquidatable_a: FunctionFragment;
  };
}

export class AccountBalance extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: AccountBalanceInterface;
  declare functions: {
    execute_trade_a: InvokeFunction<[sell_trader: IdentityInput, buy_trader: IdentityInput, base_token: AssetIdInput, trade_amount: BigNumberish, trade_value: BigNumberish, seller_fee: I64Input, buyer_fee: I64Input, matcher: IdentityInput], void>;
    modify_owed_realized_pnl_a: InvokeFunction<[trader: IdentityInput, amount: I64Input], void>;
    modify_position_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput, exchanged_position_size: I64Input, exchanged_position_notional: I64Input], void>;
    register_base_token_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], void>;
    settle_all_funding_a: InvokeFunction<[trader: IdentityInput], void>;
    settle_bad_debt_a: InvokeFunction<[trader: IdentityInput], void>;
    settle_funding_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], void>;
    settle_owed_realized_pnl_a: InvokeFunction<[trader: IdentityInput], I64Output>;
    settle_position_in_closed_market_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], [I64Output, I64Output, I64Output, BN]>;
    update_insurance_fund_fee_share_a: InvokeFunction<[insurance_fund_fee_share: BigNumberish], void>;
    update_max_funding_rate_a: InvokeFunction<[max_funding_rate: BigNumberish], void>;
    update_protocol_fee_rate_a: InvokeFunction<[protocol_fee_rate: BigNumberish], void>;
    update_tw_premium_growth_global_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput, last_tw_premium_growth_global: I64Input], void>;
    get_account_balance_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], AccountBalanceOutput>;
    get_account_collateral_values_a: InvokeFunction<[trader: IdentityInput], [I64Output, I64Output]>;
    get_all_pending_funding_payment_a: InvokeFunction<[trader: IdentityInput], I64Output>;
    get_all_trader_positions_a: InvokeFunction<[trader: IdentityInput], Vec<[AssetIdOutput, AccountBalanceOutput]>>;
    get_base_tokens_a: InvokeFunction<[trader: IdentityInput], Vec<AssetIdOutput>>;
    get_free_collateral_a: InvokeFunction<[trader: IdentityInput], BN>;
    get_free_collateral_by_token_a: InvokeFunction<[trader: IdentityInput, token: AssetIdInput], BN>;
    get_funding_a: InvokeFunction<[token: AssetIdInput], FundingOutput>;
    get_funding_delta_a: InvokeFunction<[market_twap: BigNumberish, index_twap: BigNumberish], I64Output>;
    get_funding_growth_global_a: InvokeFunction<[base_token: AssetIdInput], I64Output>;
    get_funding_rate_a: InvokeFunction<[base_token: AssetIdInput], I64Output>;
    get_liquidatable_position_size_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput, account_value: I64Input], I64Output>;
    get_margin_requirement_a: InvokeFunction<[trader: IdentityInput], BN>;
    get_margin_requirement_for_liquidation_a: InvokeFunction<[trader: IdentityInput, buffer: BigNumberish], BN>;
    get_max_repaid_settlement_a: InvokeFunction<[trader: IdentityInput], BN>;
    get_pending_funding_payment_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], [I64Output, I64Output]>;
    get_pnl_a: InvokeFunction<[trader: IdentityInput], [I64Output, I64Output]>;
    get_protocol_fee_rate_a: InvokeFunction<[], BN>;
    get_settlement_token_balance_and_unrealized_pnl_a: InvokeFunction<[trader: IdentityInput], [I64Output, I64Output]>;
    get_taker_open_notional_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], I64Output>;
    get_taker_position_size_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], I64Output>;
    get_total_abs_position_value_a: InvokeFunction<[trader: IdentityInput], BN>;
    get_total_position_value_a: InvokeFunction<[trader: IdentityInput, base_token: AssetIdInput], I64Output>;
    is_liquidatable_a: InvokeFunction<[trader: IdentityInput], boolean>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
